type Query {
    """ Get a specified product """
  product(
    """ Product slug """
    slug: String
  ): Product @cacheControl(scope: PUBLIC, maxAge: MEDIUM)
  
  """ Product search filtered and ordered """
  products(
    """ Terms that is used in search e.g.: eletronics/samsung """
    query: String = "",
    """ Defines terms types: Brand, Category, Department e.g.: c,b """
    map: String = "",
    """ Filter by category. {a}/{b} - {a} and {b} are categoryIds """
    category: String = "",
    """ Array of product specification. specificationFilter_{a}:{b} - {a} is the specificationId, {b} = specification value """
    specificationFilters: [String],
    """ Filter by price range. e.g.: {a} TO {b} - {a} is the minimum price "from" and {b} is the highest price "to" """
    priceRange: String = "",
    """ Filter by collection. where collection also know as productClusterId"""
    collection: String = "",
    """ Filter by availability at a specific sales channel. e.g.: salesChannel:4 if want filter by available products for the sales channel 4"""
    salesChannel: String = "",
    """ Order by a criteria. OrderByPriceDESC/OrderByPriceASC, OrderByTopSaleDESC, OrderByReviewRateDESC, OrderByNameASC/OrderByNameDESC, OrderByReleaseDateDESC, OrderByBestDiscountDESC """
    orderBy: String = "OrderByPriceDESC",
    """ Pagination item start """
    from: Int = 0,
    """ Pagination item end """
    to: Int = 9
  ): [Product] @cacheControl(scope: PUBLIC, maxAge: MEDIUM)

  """ Get facets category """
  facets(
  """ Categories separated by / followed by map. e.g.:  /eletronics/tvs?map=c,c """
    facets: String = ""
  ): Facets

  """ Get category details """
  category(
    """ Category id """
    id: Int
  ): Category @cacheControl(scope: PUBLIC, maxAge: MEDIUM)

  """ Get categories tree """
  categories(
    """ Category tree level. Default: 3"""
    treeLevel: Int = 3
  ): [Category] @cacheControl(scope: PUBLIC, maxAge: MEDIUM)

  """ Get brand details """
  brand(
    """ Brand id """
    id: Int
  ): Brand @cacheControl(scope: PUBLIC, maxAge: MEDIUM)

  """ Get a list of brands """
  brands: [Brand] @cacheControl(scope: PUBLIC, maxAge: MEDIUM)

  """ OrderForm simulation """
  shipping(
    """ List of SKU products """
    items: [ShippingItem],
    """ Postal code to freight calculator """
    postalCode: String,
    """ Country of postal code """
    country: String
  ): ShippingData

  """ Get checkout cart details """
  orderForm: OrderForm @cacheControl(scope: PRIVATE)

  """ Get user orders details """
  orders: [Order]

  """ Get user profile details """
  profile: Profile

  """ Get auto complete suggestions in search """
  autocomplete(
    """ Number of items that is returned """
    maxRows: Int = 12, 
    """ Terms that is used in search e.g.: iphone """
    searchTerm: String
  ): Suggestions

  """ Search documents """
  documents(
    """ Schema name. e.g.: CL, AD"""
    acronym: String, 
    """ Fields that will be returned by document. e.g.: _fields=email,firstName,document """
    fields: [String], 
    """ Pagination. Default: 1 """
    page: Int = 1, 
    """ Items returned in the page. Default: 15"""
    pageSize: Int = 15  
  ): [Document]

  """ Get document """
  document(
    """ Schema name. e.g.: CL, AD"""
    acronym: String, 
    """ Fields that will be returned in document. e.g.: _fields=email,firstName,document """
    fields: [String], 
    """ Document id """
    id: String
  ): Document
}

type Mutation {
  """ Cart """
  addItem(orderFormId: String, items: [OrderFormItemInput]): OrderForm
  cancelOrder(orderFormId: String, reason: String): Boolean
  updateItems(orderFormId: String, items: [OrderFormItemInput]): OrderForm

  """ Profile """
  updateProfile(fields: ProfileInput): Profile
  updateAddress(id: String, fields: AddressInput): Profile
  createAddress(fields: AddressInput): Profile
  deleteAddress(id: String): Boolean

  """ Order Form """
  updateOrderFormProfile(orderFormId: String, fields: OrderFormProfileInput): OrderForm
  updateOrderFormShipping(orderFormId: String, address: OrderFormAddressInput): OrderForm
  updateOrderFormPayment(orderFormId: String,  payments: [OrderFormPaymentInput]): OrderForm
  updateOrderFormIgnoreProfile(orderFormId: String, ignoreProfileData: Boolean): OrderForm
  addOrderFormPaymentToken(orderFormId: String, paymentToken: OrderFormPaymentTokenInput): OrderForm
  setOrderFormCustomData(orderFormId: String, appId: String, field: String, value: String): OrderForm
  
  """ Payment """
  createPaymentSession: PaymentSession
  createPaymentTokens(sessionId: String, payments: [PaymentInput]): [PaymentToken]
  setPlaceholder(fields: PlaceholderInput): Boolean

  """ Send access key to user email """
  sendEmailVerification(
    """ User email"""
    email: String!
  ): Boolean

  """ Access key sign in mode """
  accessKeySignIn(
    """ User email"""
    email: String!, 
    """ Access key that was received """
    code: String!
  ): String

  """ Classic sign in mode """
  classicSignIn(
    """ User email"""
    email: String!, 
    """ User password """
    password: String!
  ): String
  """ To recovery password you need to get your email, password and access code """
  recoveryPassword(
    """ User email"""
    email: String!, 
    """ User password """
    newPassword: String!,
    """ Access Code """
    code: String!
    ): String

  """ Invalidate VtexIdclientAutCookie """
  logout: Boolean

  """ Document """
  createDocument(acronym: String, document: DocumentInput): DocumentResponse
  updateDocument(acronym: String, document: DocumentInput): DocumentResponse
}
