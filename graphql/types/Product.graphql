type Product {
  """ Brand of the product """
  brand: String
  """ linkText is used as cacheId """
  cacheId: ID
  categoryId: ID
  """ Categories of the product """
  categories: [String] @deprecated(reason: "Use 'categoryTree' field for internationalization support")
  """ Categories ids of the product """
  categoriesIds: [String] @deprecated(reason: "Use 'categoryTree' field for internationalization support")
  """ Product's categories """
  categoryTree: [Category]
  """ List of related products """
  clusterHighlights: [ClusterHighlight]
  productClusters: [ProductClusters]
  """ Product description """
  description: IOMessage
  """ SKU objects of the product """
  items: [SKU]
  """ Product URL """
  link: String
  """ Product slug """
  linkText: String
  """ Product ID """
  productId: ID
  """ Product name """
  productName: IOMessage
  """ Array of product properties  """
  properties: [Property]
  """ Array of product properties  """
  propertyGroups: [PropertyGroup]
  """ Product reference """
  productReference: String
  """ Title used by html tag"""
  titleTag: String
  """ Description used by html tag"""
  metaTagDescription: String
  """ Related Products """
  recommendations: Recommendation
  """ JSON specification of the product"""
  jsonSpecifications: String
  """ List of benefits associated with this product """
  benefits: [Benefit]
  itemMetadata: ItemMetadata
   """ Array of product SpecificationGroup """
  specificationGroups: [SpecificationGroup]
}

type OnlyProduct {
  brand: String
  categoryId: ID
  categories: [String] @deprecated(reason: "Use 'categoryTree' field for internationalization support")
  categoriesIds: [String] @deprecated(reason: "Use 'categoryTree' field for internationalization support")
  categoryTree: [Category]
  clusterHighlights: [ClusterHighlight]
  productClusters: [ProductClusters]
  description: String
  link: String
  linkText: String
  productId: ID
  productName: String
  properties: [Property]
  propertyGroups: [PropertyGroup]
  productReference: String
  recommendations: Recommendation
  jsonSpecifications: String
}

type ProductClusters {
  id: ID
  name: String
}

type ClusterHighlight {
  id: ID
  name: String
}

type Seller {
  sellerId: ID
  sellerName: String
  addToCartLink: String
  sellerDefault: Boolean
  commertialOffer: Offer
}

type Recommendation {
  buy: [Product]
  view: [Product]
  similars: [Product]
}

type SKU {
  itemId: ID
  name: String
  nameComplete: String
  complementName: String
  ean: String
  referenceId: [Reference]
  measurementUnit: String
  unitMultiplier: Float
  kitItems: [KitItem]
  images (quantity: Int = 10) : [Image]
  sellers: [Seller]
  variations: [Property]
  attachments: [Attachment]
  calculatedAttachments: String
}

input ProductUniqueIdentifier {
  field: ProductUniqueIdentifierField!
  value: ID!
}

enum ProductUniqueIdentifierField {
  id
  slug
  ean
  reference
  sku
}

type KitItem {
  itemId: ID
  amount: Int
  product: OnlyProduct
  sku: SKU
}

type Attachment {
  id: ID
  name: String
  required: Boolean
  domainValues: [DomainValues]
}

type DomainValues {
  FieldName: String
  MaxCaracters: String
  DomainValues: String
}

enum InstallmentsCriteria {
  MAX
  MIN
  ALL
}

type Offer {
  Installments (criteria: InstallmentsCriteria = ALL, rates: Boolean = true): [Installment]
  Price: Float
  ListPrice: Float
  PriceWithoutDiscount: Float
  RewardValue: Float
  PriceValidUntil: String
  AvailableQuantity: Float
  Tax: Float
  CacheVersionUsedToCallCheckout: String
  DeliverySlaSamples: [DeliverySlaSamples]
  """List of discount highlights"""
  discountHighlights: [Discount!]
}

""" Discount object """
type Discount {
  """ Discount name """
  name: String
}

type DeliverySlaSamples {
  DeliverySlaPerTypes: [DeliverySlaPerTypes]
  Region: Region
}

type DeliverySlaPerTypes {
  TypeName: String
  Price: Float
  EstimatedTimeSpanToDelivery: String
}

type Region {
  IsPersisted: Boolean
  IsRemoved: Boolean
  Id: ID
  Name: String
  CountryCode: String
  ZipCode: String
  CultureInfoName: String
}

type Image {
  cacheId: ID
  imageId: ID
  imageLabel: String
  imageTag: String
  imageUrl: String
  imageText: String
}

type SpecificationGroup {
  name: String,
  specifications: [Property]
}

type Property {
  name: String
  values: [String]
}

type PropertyGroup {
  name: String
  properties: [String]
}

type Installment {
  Value: Float
  InterestRate: Float
  TotalValuePlusInterestRate: Float
  NumberOfInstallments: Int
  PaymentSystemName: String
  PaymentSystemGroupName: String
  Name: String
}

type Reference {
  Key: String
  Value: String
}
